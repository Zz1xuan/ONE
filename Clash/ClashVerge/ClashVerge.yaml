# Author:https://github.com/Repcz
# TG:https://t.me/QVQ_Channel
# 以 '#' 或 '//' 开头的配置文件行为注释行
#
# Clash Verg Rev Version ≥ 1.6.2
#
# 最后更新时间: 2024-06-02 21:50
#
# ================

# 混合端口 HTTP和SOCKS5用一个端口
mixed-port: 7893
# TCP 并发连接所有 IP, 将使用最快握手的 TCP
tcp-concurrent: true
# 允许局域网的连接（可用来共享代理）
allow-lan: true
# 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
ipv6: false
# 规则模式：rule/global/direct/script
mode: rule
# 设置日志输出级别: silent/error/warning/info/debug
log-level: info
# 全局 TLS 指纹
global-client-fingerprint: chrome
# 匹配所有进程（always/strict/off）
find-process-mode: strict

# 使用geoip.dat数据库
geodata-mode: true
geox-url:
  geoip: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  geosite: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  mmdb: "https://mirror.ghproxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country-lite.mmdb"

profile:
  # 存储 select 选择记录
  store-selected: true
  # 持久化 fake-ip
  store-fake-ip: true

# 嗅探域名 可选配置
sniffer:
  enable: true
  # 是否使用嗅探结果作为实际访问，默认 true
  parse-pure-ip: true
  sniff:
    TLS:
      ports: [443, 8443]
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    QUIC:
      ports: [443, 8443]

# Tun 配置
tun:
  enable: true
  # 可选： system/gvisor/mixed；
  stack: mixed
  # dns劫持,一般设置为 any:53 即可, 即劫持所有53端口的udp流量
  dns-hijack: [any:53]
  # 自动设置全局路由，可以自动将全局流量路由进入tun网卡。
  auto-route: true
  # 自动识别出口网卡
  auto-detect-interface: true

dns:
  enable: true
  # IPV6解析开关；如果为false，将返回ipv6结果为空
  ipv6: false
  # 模式：redir-host或fake-ip
  enhanced-mode: fake-ip
  # DNS监听地址
  listen: 0.0.0.0:1053
  # Fake-IP解析地址池
  fake-ip-range: 198.18.0.1/16
  # fakeip 过滤，以下地址不会下发 fakeip 映射用于连接
  fake-ip-filter:
    [
      "*.lan",
      "*.direct",
      cable.auth.com,
      "*.msftconnecttest.com",
      "*.msftncsi.com",
      network-test.debian.org,
      detectportal.firefox.com,
      resolver1.opendns.com,
      "*.srv.nintendo.net",
      "*.stun.playstation.net",
      xbox.*.microsoft.com,
      "*.xboxlive.com",
      stun.*,
      global.turn.twilio.com,
      global.stun.twilio.com,
      app.yinxiang.com,
      injections.adguard.org,
      local.adguard.org,
      cable.auth.com,
      localhost.*.qq.com,
      localhost.*.weixin.qq.com,
      "*.logon.battlenet.com.cn",
      "*.logon.battle.net",
      "*.blzstatic.cn",
      music.163.com,
      "*.music.163.com",
      "*.126.net",
      musicapi.taihe.com,
      music.taihe.com,
      songsearch.kugou.com,
      trackercdn.kugou.com,
      "*.kuwo.cn",
      api-jooxtt.sanook.com,
      api.joox.com,
      joox.com,
      y.qq.com,
      "*.y.qq.com",
      streamoc.music.tc.qq.com,
      mobileoc.music.tc.qq.com,
      isure.stream.qqmusic.qq.com,
      dl.stream.qqmusic.qq.com,
      aqqmusic.tc.qq.com,
      amobile.music.tc.qq.com,
      "*.xiami.com",
      "*.music.migu.cn",
      music.migu.cn,
      proxy.golang.org,
      "*.mcdn.bilivideo.cn",
      "*.cmpassport.com",
      id6.me,
      open.e.189.cn,
      mdn.open.wo.cn,
      opencloud.wostore.cn,
      auth.wosms.cn,
      "*.jegotrip.com.cn",
      "*.icitymobile.mobi",
      "*.pingan.com.cn",
      "*.cmbchina.com",
      "*.10099.com.cn",
      pool.ntp.org,
      "*.pool.ntp.org",
      ntp.*.com,
      time.*.com,
      "ntp?.*.com",
      "time?.*.com",
      time.*.gov,
      time.*.edu.cn,
      "*.ntp.org.cn",
      PDC._msDCS.*.*,
      DC._msDCS.*.*,
      GC._msDCS.*.*,
    ]
  #默认的域名解析服务器
  nameserver:
    [
      quic://223.5.5.5,
      quic://223.6.6.6,
      https://1.12.12.12/dns-query,
      https://120.53.53.53/dns-query,
    ]

# 策略组引用相关参数
pg:
  &pg {
    type: select,
    proxies:
      [手动切换, 香港节点, 美国节点, 狮城节点, 日本节点, 台湾节点, DIRECT],
  }
# 订阅更新和延迟测试相关参数
p:
  &p {
    type: http,
    interval: 86400,
    health-check:
      {
        enable: true,
        url: http://latency-test.skk.moe/endpoint,
        interval: 1800,
      },
  }
# 自动选择策略组：选取延迟最低节点
auto:
  &auto {
    type: url-test,
    lazy: true,
    url: http://latency-test.skk.moe/endpoint,
    interval: 300,
    tolerance: 0,
    include-all: true,
  }
# 手动选择策略组：手动选择想要的节点/策略组
select: &select { type: select, include-all: true }
# 故障回退策略组：策略组将按顺序选择你列表中第一个可用的节点
fallback:
  &fallback {
    type: fallback,
    lazy: true,
    url: http://latency-test.skk.moe/endpoint,
    interval: 300,
    include-all: true,
  }
# 负载均衡策略组：不同的请求将使用不同的代理节点
load-balance:
  &load-balance {
    type: load-balance,
    lazy: true,
    strategy: consistent-hashing,
    url: http://latency-test.skk.moe/endpoint,
    interval: 300,
    include-all: true,
  }
# classical规则相关
c: &c { type: http, behavior: classical, interval: 86400 }
# domain规则相关
d: &d { type: http, behavior: domain, interval: 86400 }
# ipcidr规则相关
i: &i { type: http, behavior: ipcidr, interval: 86400 }

proxy-providers:
  Subscribe:
    {
      <<: *p,
      path: ./proxy-providers/Sub.yaml,
      url: http://your-service-provider,
    }
    # 在此将"http://your-service-provider"替换为你的机场订阅，推荐使用base64或者node list
    # Sub-Store生成的链接,可以直接替换上述url引号中的部分,具体见Sub-Store教程

proxy-groups:
  #分流分组
  - {
      name: 手动切换,
      type: select,
      use: [Subscribe],
      proxies: [香港节点, 美国节点, 狮城节点, 日本节点, 台湾节点, DIRECT],
      icon: https://github.com/clash-verge-rev/clash-verge-rev/raw/main/src/assets/image/logo.png,
    }

  - {
      name: 国外网站,
      <<: *pg,
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png,
    }

  - {
      name: 苹果服务,
      <<: *pg,
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png,
    }

  - {
      name: 微软服务,
      <<: *pg,
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png,
    }

  - {
      name: 谷歌服务,
      <<: *pg,
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png,
    }

  - {
      name: OpenAI,
      type: select,
      proxies: [狮城节点, 美国节点],
      icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/OpenAI.png,
    }

  - {
      name: 游戏平台,
      <<: *pg,
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png,
    }

  - {
      name: Spotify,
      type: select,
      proxies: [DIRECT, 香港节点],
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png,
    }

  - {
      name: Emby,
      type: select,
      proxies: [DIRECT, 狮城节点, 美国节点],
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Emby.png,
    }

  - {
      name: 哔哩哔哩,
      type: select,
      proxies: [DIRECT, 香港节点, 台湾节点],
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/bilibili.png,
    }

  - {
      name: 国内网站,
      type: select,
      proxies: [DIRECT, 手动切换],
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China_Map.png,
    }

  - {
      name: 广告拦截,
      type: select,
      proxies: [REJECT, DIRECT],
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Advertising.png,
    }

  - {
      name: 兜底分流,
      type: select,
      proxies: [DIRECT, 手动切换],
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color//Final.png,
    }

  #节点地区分组

  - {
      name: 香港节点,
      <<: *select,
      filter: "^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$",
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png,
    }

  - {
      name: 美国节点,
      <<: *select,
      filter: "^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$",
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png,
    }

  - {
      name: 狮城节点,
      <<: *select,
      filter: "^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$",
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png,
    }

  - {
      name: 日本节点,
      <<: *select,
      filter: "^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$",
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png,
    }

  - {
      name: 台湾节点,
      <<: *select,
      filter: "(?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)\b)",
      icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/China.png,
    }

rule-providers:
  # 局域网
  Lan:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Lan.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Lan.list,
    }

  # 下载服务
  Download:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Download.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Download.list,
    }

  # 修正
  Unbreak-d:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Unbreak-d.list,
      url: https://raw.githubusercontent.com/Zz1xuan/ONE/main/Rule/Unbreak-d.list,
    }

  Unbreak-p:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Unbreak-p.list,
      url: https://raw.githubusercontent.com/Zz1xuan/ONE/main/Rule/Unbreak-p.list,
    }

  #广告拦截
  AD:
    {
      <<: *d,
      format: text,
      path: ./rule-providers/AD.list,
      url: https://raw.githubusercontent.com/Zz1xuan/ONE/main/Rule/AdRule.list,
    }

  # 苹果服务
  Apple:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Apple.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Apple.list,
    }

  # 微软服务
  OneDrive:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/OneDrive.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/OneDrive.list,
    }
  Github:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Github.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Github.list,
    }
  Microsoft:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Microsoft.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Microsoft.list,
    }

  # 谷歌服务
  YouTube:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/YouTube.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/YouTube.list,
    }
  Google:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Google.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Google.list,
    }

  # 哔哩哔哩
  BiliBili:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/BiliBili.list,
      url: https://raw.githubusercontent.com/kokoryh/Script/master/Surge/rule/Bilibili.list,
    }

  # 游戏平台
  Steam:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/steam.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Steam.list,
    }
  Epic:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Epic.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Epic.list,
    }

  # Spotify音乐
  Spotify:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Spotify.list,
      url: https://raw.githubusercontent.com/Zz1xuan/ONE/main/Rule/Spotify.list,
    }

  # AI平台
  OpenAI:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/OpenAI.list,
      url: https://raw.githubusercontent.com/Zz1xuan/ONE/main/Rule/AI.list,
    }

  # 中国大陆
  ChinaDomain:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/ChinaDomain.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/ChinaDomain.list,
    }

  # Emby
  Emby:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/Emby.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/Emby.list,
    }

  # 代理网站
  ProxyGFW:
    {
      <<: *c,
      format: text,
      path: ./rule-providers/ProxyGFW.list,
      url: https://github.com/Repcz/Tool/raw/X/Clash/Rules/ProxyGFW.list,
    }

rules:
  #- SCRIPT,quic,REJECT
  #- RULE-SET,Download,DIRECT
  - RULE-SET,AD,广告拦截
  - RULE-SET,Unbreak-d,国内网站
  - RULE-SET,Unbreak-p,国外网站
  - RULE-SET,OpenAI,OpenAI
  - RULE-SET,Apple,苹果服务
  - RULE-SET,OneDrive,微软服务
  - RULE-SET,Github,微软服务
  - RULE-SET,Microsoft,微软服务
  - RULE-SET,YouTube,谷歌服务
  - RULE-SET,Google,谷歌服务
  - RULE-SET,Spotify,Spotify
  - RULE-SET,BiliBili,哔哩哔哩
  - RULE-SET,Steam,游戏平台
  - RULE-SET,Epic,游戏平台
  - RULE-SET,Emby,Emby
  - RULE-SET,ProxyGFW,国外网站
  - RULE-SET,ChinaDomain,国内网站
  - RULE-SET,Lan,DIRECT
  - GEOIP,CN,国内网站
  - MATCH,兜底分流

script:
  shortcuts:
    quic: network == 'udp' and dst_port == 443
